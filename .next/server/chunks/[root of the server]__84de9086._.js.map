{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/genreshift-web/app/api/convert/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport axios from 'axios';\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    console.log('=========== API调用开始 ===========');\r\n    const { content, parameters } = await request.json();\r\n    \r\n    const trimmedContent = content.substring(0, 5000);\r\n    \r\n    console.log('内容长度:', trimmedContent.length);\r\n    console.log('内容前100个字符:', trimmedContent.substring(0, 100));\r\n    console.log('参数:', JSON.stringify(parameters));\r\n    \r\n    // 测试API密钥是否有效的简单请求\r\n    try {\r\n      console.log('发送简单测试请求到API检查密钥有效性');\r\n      const testResponse = await axios.post(\"https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions\", {\r\n        model: \"qwen-plus\",\r\n        messages: [\r\n          {role: 'system', content: 'You are a helpful assistant.'},\r\n          {role: 'user', content: 'Hello, are you working?'}\r\n        ],\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer sk-364edeb5190543d1ba2d5127d4428e47`\r\n        }\r\n      });\r\n      console.log('测试响应:', JSON.stringify(testResponse.data).substring(0, 100));\r\n    } catch (testError) {\r\n      console.error('API密钥测试失败:', testError.message);\r\n      if (testError.response) {\r\n        console.error('测试响应状态:', testError.response.status);\r\n        console.error('测试响应数据:', JSON.stringify(testError.response.data));\r\n      }\r\n      return NextResponse.json(\r\n        { error: \"API密钥测试失败，请检查您的API密钥\" },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // 如果测试通过，继续执行实际请求\r\n    // 内容长度限制\r\n    const MAX_CONTENT_LENGTH = 5000; // 限制字符数\r\n    const trimmedContent = content.substring(0, MAX_CONTENT_LENGTH);\r\n    \r\n    console.log(`接收请求参数: 内容长度=${trimmedContent.length}, 参数=`, parameters);\r\n    \r\n    if (!trimmedContent) {\r\n      return NextResponse.json(\r\n        { error: \"请提供论文内容\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    // 使用更简单明确的提示词\r\n    const promptContent = `\r\n请将以下学术论文内容转换为易读的科技新闻格式：\r\n\r\n【论文内容】\r\n${trimmedContent}\r\n\r\n【输出要求】\r\n风格：${parameters.outputStyle === 'news' ? '新闻报道' : parameters.outputStyle === 'blog' ? '博客文章' : '摘要总结'}\r\n长度：${parameters.length === 'short' ? '简短(300字左右)' : parameters.length === 'medium' ? '中等(500字左右)' : '详细(800字左右)'}\r\n重点关注：${parameters.focus === 'general' ? '综合内容' : parameters.focus === 'methodology' ? '研究方法' : parameters.focus === 'results' ? '研究结果' : '研究意义'}\r\n语言：${parameters.language === 'zh' ? '中文' : '英文'}\r\n    `;\r\n    \r\n    // 添加超时处理\r\n    const API_KEY = \"sk-364edeb5190543d1ba2d5127d4428e47\";\r\n    const API_URL = \"https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions\";\r\n    \r\n    console.log('发送请求到外部API');\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), 30000); // 30秒超时\r\n    \r\n    try {\r\n      const response = await axios.post(API_URL, {\r\n        model: \"qwen-plus\",\r\n        messages: [\r\n          {role: 'system', content: 'You are a helpful assistant.'},\r\n          {role: 'user', content: promptContent}\r\n        ],\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${API_KEY}`\r\n        },\r\n        signal: controller.signal\r\n      });\r\n      \r\n      clearTimeout(timeoutId);\r\n      console.log('收到外部API响应:', JSON.stringify(response.data).substring(0, 200) + '...');\r\n      \r\n      // 返回处理结果\r\n      if (response.data && response.data.choices && response.data.choices[0]) {\r\n        return NextResponse.json({\r\n          result: response.data.choices[0].message.content\r\n        });\r\n      } else {\r\n        console.error('API返回格式异常:', JSON.stringify(response.data));\r\n        throw new Error(\"API返回格式异常\");\r\n      }\r\n    } catch (apiError) {\r\n      console.error('API请求错误:', apiError.message);\r\n      console.error('API请求详情:', apiError.config);\r\n      if (apiError.response) {\r\n        console.error('API响应状态:', apiError.response.status);\r\n        console.error('API响应数据:', apiError.response.data);\r\n      }\r\n      throw apiError; // 重新抛出以便外层catch捕获\r\n    }\r\n    \r\n    // 备用API服务\r\n    if (API_KEY === \"sk-364edeb5190543d1ba2d5127d4428e47\") {\r\n      console.log('主API密钥可能有问题，尝试使用备用服务');\r\n      // 这里可以使用OpenAI或其他类似服务作为备用\r\n      // 例如使用OpenAI\r\n      // const response = await axios.post(\"https://api.openai.com/v1/chat/completions\", ...\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('API调用详细错误:', error);\r\n    \r\n    // 改进错误处理\r\n    const errorMessage = error.code === 'ECONNABORTED' \r\n      ? \"API请求超时，请稍后再试\" \r\n      : error.message || \"转换过程发生错误\";\r\n    \r\n    return NextResponse.json(\r\n      { error: errorMessage },\r\n      { status: 500 }\r\n    );\r\n  }\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}