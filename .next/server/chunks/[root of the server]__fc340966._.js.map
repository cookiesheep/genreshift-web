{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/genreshift-web/app/api/transform/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport axios from 'axios';\n\n// 减少超时时间以适应Vercel环境限制\nconst TIMEOUT_MS = 25000; // 减少到25秒，避免Vercel的30秒限制\n\n// 简单的内存缓存，避免重复请求相同内容\nconst responseCache = new Map();\n// 缓存清理时间（10分钟）\nconst CACHE_EXPIRY = 10 * 60 * 1000;\n\n// 导出配置，设置为Edge Runtime以获得更长的执行时间\nexport const config = {\n  runtime: 'edge',\n  regions: ['hkg1'], // 指定香港区域，提高中国用户访问速度\n  maxDuration: 60, // 尝试设置最大执行时间\n};\n\n// 处理单个文本段落的函数\nasync function processTextSegment(content, parameters, segmentIndex, totalSegments) {\n  // 创建缓存键（内容+参数组合）\n  const cacheKey = JSON.stringify({\n    content: content.substring(0, 50) + content.length,\n    parameters,\n    segmentIndex\n  });\n  \n  // 检查缓存\n  if (responseCache.has(cacheKey)) {\n    console.log(`使用缓存结果，节省API调用 (段落 ${segmentIndex + 1}/${totalSegments})`);\n    return responseCache.get(cacheKey);\n  }\n  \n  // 获取环境变量中的API密钥和URL\n  const API_KEY = process.env.DASHSCOPE_API_KEY || \"sk-1f660ec6e1584c83825ffeed4b838523\";\n  const API_URL = process.env.DASHSCOPE_API_URL || \"https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions\";\n  \n  if (!API_KEY) {\n    throw new Error(\"API密钥未配置，请检查环境变量设置\");\n  }\n  \n  // 根据段落位置调整提示词\n  let segmentContext = '';\n  if (totalSegments > 1) {\n    if (segmentIndex === 0) {\n      segmentContext = '这是文章的第一部分，请重点关注开头内容。';\n    } else if (segmentIndex === totalSegments - 1) {\n      segmentContext = '这是文章的最后一部分，请重点关注结论和总结。';\n    } else {\n      segmentContext = `这是文章的第${segmentIndex + 1}部分，请保持与前后文的连贯性。`;\n    }\n  }\n  \n  const prompt = `\n${segmentContext}\n将下面的学术论文内容（${content.length}字）转为${parameters.length === 'short' ? '300字左右' : parameters.length === 'medium' ? '500字左右' : '800字左右'}的${parameters.outputStyle === 'news' ? '新闻报道' : parameters.outputStyle === 'blog' ? '博客文章' : '摘要总结'}，使用${parameters.language === 'zh' ? '中文' : '英文'}，重点关注${parameters.focus === 'general' ? '综合内容' : parameters.focus === 'methodology' ? '研究方法' : parameters.focus === 'results' ? '研究结果' : '研究意义'}：\n\n${content}\n  `;\n  \n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), TIMEOUT_MS);\n  \n  const response = await axios.post(API_URL, {\n    model: \"qwen-turbo\",\n    messages: [\n      {role: 'system', content: '您是一位专门将学术内容转化为通俗易懂格式的专家。回答简洁直接，不需要废话。'},\n      {role: 'user', content: prompt}\n    ],\n    max_tokens: parameters.length === 'short' ? 500 : (parameters.length === 'medium' ? 800 : 1200),\n    temperature: 0.3,\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${API_KEY}`\n    },\n    timeout: TIMEOUT_MS,\n    signal: controller.signal,\n  });\n  \n  clearTimeout(timeoutId);\n  \n  if (response.data && response.data.choices && response.data.choices[0]) {\n    const result = response.data.choices[0].message.content;\n    \n    // 保存到缓存\n    responseCache.set(cacheKey, result);\n    // 设置缓存自动过期\n    setTimeout(() => {\n      responseCache.delete(cacheKey);\n    }, CACHE_EXPIRY);\n    \n    return result;\n  } else {\n    throw new Error(\"API返回格式异常\");\n  }\n}\n\n// 添加重试机制\nconst retryRequest = async (fn, retries = 3) => {\n  for (let i = 0; i < retries; i++) {\n    try {\n      return await fn();\n    } catch (error) {\n      if (i === retries - 1) throw error;\n      console.log(`Retry attempt ${i + 1} failed, retrying...`);\n      await new Promise(resolve => setTimeout(resolve, 1000 * (i + 1)));\n    }\n  }\n};\n\nexport async function POST(request) {\n  try {\n    const { content, parameters } = await request.json();\n\n    if (!content) {\n      return NextResponse.json(\n        { error: '内容不能为空' },\n        { status: 400 }\n      );\n    }\n\n    if (content.length > 2000) {\n      return NextResponse.json(\n        { error: '内容长度超过限制，请分段处理' },\n        { status: 400 }\n      );\n    }\n\n    const response = await retryRequest(async () => {\n      const result = await processTextSegment(content, parameters, 0, 1);\n      return { result };\n    });\n\n    return NextResponse.json(response);\n  } catch (error) {\n    console.error('API Error:', {\n      message: error.message,\n      code: error.code,\n      status: error.response?.status,\n      data: error.response?.data\n    });\n\n    if (error.response) {\n      // 处理特定的错误状态码\n      switch (error.response.status) {\n        case 401:\n          return NextResponse.json(\n            { error: 'API密钥无效或已过期' },\n            { status: 401 }\n          );\n        case 429:\n          return NextResponse.json(\n            { error: '请求过于频繁，请稍后再试' },\n            { status: 429 }\n          );\n        case 408:\n          return NextResponse.json(\n            { error: '请求超时，请重试' },\n            { status: 408 }\n          );\n        default:\n          return NextResponse.json(\n            { error: '服务器处理请求时出错' },\n            { status: error.response.status }\n          );\n      }\n    }\n\n    return NextResponse.json(\n      { error: '服务器内部错误' },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":"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","debugId":null}}]
}