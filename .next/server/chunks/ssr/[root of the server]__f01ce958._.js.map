{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/genreshift-web/app/utils/localStorageManager.js"],"sourcesContent":["'use client';\r\n\r\n// 本地存储键名称常量\r\nconst STORAGE_KEYS = {\r\n  HISTORY: 'genreshift-history',\r\n  USER_SETTINGS: 'genreshift-settings',\r\n  THEME: 'theme',\r\n  API_USAGE: 'genreshift-api-usage',\r\n  RECENT_FILES: 'genreshift-recent-files'\r\n};\r\n\r\n/**\r\n * 统一的错误处理函数\r\n * @param {string} functionName 函数名称\r\n * @param {Error} error 错误对象\r\n * @param {*} defaultValue 默认返回值\r\n * @returns {*} 默认返回值\r\n */\r\nconst handleError = (functionName, error, defaultValue) => {\r\n  console.error(`[LocalStorageManager] ${functionName} 失败:`, error);\r\n  return defaultValue;\r\n};\r\n\r\n/**\r\n * 判断当前环境是否为浏览器\r\n * @returns {boolean} 是否为浏览器环境\r\n */\r\nconst isBrowser = () => typeof window !== 'undefined';\r\n\r\n/**\r\n * 添加或更新历史记录\r\n * @param {Object} item 历史记录项目\r\n * @returns {string|null} 记录ID或null（失败时）\r\n */\r\nexport const saveToHistory = (item) => {\r\n  if (!isBrowser()) return null;\r\n  \r\n  try {\r\n    // 确保必需字段存在\r\n    if (!item.title || !item.content) {\r\n      console.error('[LocalStorageManager] 保存历史记录失败：标题或内容缺失');\r\n      return null;\r\n    }\r\n    \r\n    // 创建唯一ID\r\n    const id = item.id || `hist-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    // 获取现有历史记录\r\n    const historyItems = getHistoryItems();\r\n    \r\n    // 准备新记录\r\n    const newItem = {\r\n      id,\r\n      title: item.title,\r\n      originalFileName: item.originalFileName || '未命名文件',\r\n      date: item.date || new Date().toISOString().slice(0, 10),\r\n      outputStyle: item.outputStyle || 'summary',\r\n      previewText: item.content.substring(0, 150) + '...',\r\n      content: item.content,\r\n      tags: item.tags || [],\r\n    };\r\n    \r\n    // 检查是否存在相同ID的记录，如果存在则更新，否则添加新记录\r\n    const existingIndex = historyItems.findIndex(hist => hist.id === id);\r\n    if (existingIndex >= 0) {\r\n      historyItems[existingIndex] = newItem;\r\n    } else {\r\n      historyItems.unshift(newItem); // 添加到最前面\r\n    }\r\n    \r\n    // 获取用户设置的最大历史记录数量，默认为50\r\n    const settings = getUserSettings();\r\n    const maxHistoryItems = settings.preferences?.maxHistoryItems || 50;\r\n    \r\n    // 限制存储数量\r\n    const limitedItems = historyItems.slice(0, maxHistoryItems);\r\n    \r\n    // 保存到本地存储\r\n    localStorage.setItem(STORAGE_KEYS.HISTORY, JSON.stringify(limitedItems));\r\n    \r\n    return id;\r\n  } catch (error) {\r\n    return handleError('saveToHistory', error, null);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取所有历史记录\r\n * @returns {Array} 历史记录数组\r\n */\r\nexport const getHistoryItems = () => {\r\n  if (!isBrowser()) return [];\r\n  \r\n  try {\r\n    const historyData = localStorage.getItem(STORAGE_KEYS.HISTORY);\r\n    return historyData ? JSON.parse(historyData) : [];\r\n  } catch (error) {\r\n    return handleError('getHistoryItems', error, []);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取单个历史记录\r\n * @param {string} id 记录ID\r\n * @returns {Object|null} 历史记录对象或null\r\n */\r\nexport const getHistoryItem = (id) => {\r\n  if (!isBrowser()) return null;\r\n  \r\n  try {\r\n    const historyItems = getHistoryItems();\r\n    return historyItems.find(item => item.id === id) || null;\r\n  } catch (error) {\r\n    return handleError('getHistoryItem', error, null);\r\n  }\r\n};\r\n\r\n/**\r\n * 删除单个历史记录\r\n * @param {string} id 记录ID\r\n * @returns {boolean} 删除是否成功\r\n */\r\nexport const deleteHistoryItem = (id) => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    let historyItems = getHistoryItems();\r\n    const initialLength = historyItems.length;\r\n    \r\n    historyItems = historyItems.filter(item => item.id !== id);\r\n    \r\n    if (historyItems.length !== initialLength) {\r\n      localStorage.setItem(STORAGE_KEYS.HISTORY, JSON.stringify(historyItems));\r\n      return true;\r\n    }\r\n    return false;\r\n  } catch (error) {\r\n    return handleError('deleteHistoryItem', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 删除多个历史记录\r\n * @param {Array} ids 记录ID数组\r\n * @returns {number} 成功删除的数量\r\n */\r\nexport const deleteHistoryItems = (ids) => {\r\n  if (!isBrowser()) return 0;\r\n  if (!ids || !ids.length) return 0;\r\n  \r\n  try {\r\n    let historyItems = getHistoryItems();\r\n    const initialLength = historyItems.length;\r\n    \r\n    historyItems = historyItems.filter(item => !ids.includes(item.id));\r\n    \r\n    const deletedCount = initialLength - historyItems.length;\r\n    localStorage.setItem(STORAGE_KEYS.HISTORY, JSON.stringify(historyItems));\r\n    \r\n    return deletedCount;\r\n  } catch (error) {\r\n    return handleError('deleteHistoryItems', error, 0);\r\n  }\r\n};\r\n\r\n/**\r\n * 清空所有历史记录\r\n * @returns {boolean} 清空是否成功\r\n */\r\nexport const clearAllHistory = () => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    localStorage.removeItem(STORAGE_KEYS.HISTORY);\r\n    return true;\r\n  } catch (error) {\r\n    return handleError('clearAllHistory', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 保存用户设置\r\n * @param {Object} settings 设置对象\r\n * @returns {boolean} 保存是否成功\r\n */\r\nexport const saveUserSettings = (settings) => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    // 获取现有设置\r\n    const currentSettings = getUserSettings();\r\n    \r\n    // 合并新设置\r\n    const updatedSettings = { ...currentSettings, ...settings };\r\n    \r\n    // 保存到本地存储\r\n    localStorage.setItem(STORAGE_KEYS.USER_SETTINGS, JSON.stringify(updatedSettings));\r\n    return true;\r\n  } catch (error) {\r\n    return handleError('saveUserSettings', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取用户设置\r\n * @returns {Object} 用户设置对象\r\n */\r\nexport const getUserSettings = () => {\r\n  if (!isBrowser()) {\r\n    return getDefaultSettings();\r\n  }\r\n  \r\n  try {\r\n    const settingsData = localStorage.getItem(STORAGE_KEYS.USER_SETTINGS);\r\n    \r\n    // 如果找不到设置或解析失败，返回默认设置\r\n    if (!settingsData) {\r\n      return getDefaultSettings();\r\n    }\r\n    \r\n    return { ...getDefaultSettings(), ...JSON.parse(settingsData) };\r\n  } catch (error) {\r\n    return handleError('getUserSettings', error, getDefaultSettings());\r\n  }\r\n};\r\n\r\n/**\r\n * 获取默认设置\r\n * @returns {Object} 默认设置对象\r\n */\r\nexport const getDefaultSettings = () => {\r\n  return {\r\n    userInfo: {\r\n      name: '用户',\r\n      email: '',\r\n    },\r\n    preferences: {\r\n      defaultOutputStyle: 'news',\r\n      defaultLength: 'medium',\r\n      defaultFocus: 'general',\r\n      defaultLanguage: 'zh',\r\n      apiModel: 'qwen-turbo',\r\n      maxHistoryItems: 50,\r\n    },\r\n    saveHistory: true,\r\n    darkMode: false,\r\n    joinDate: new Date().toISOString().slice(0, 10),\r\n  };\r\n};\r\n\r\n/**\r\n * 获取主题模式（暗色/亮色）\r\n * @returns {boolean} 是否为暗色模式\r\n */\r\nexport const getDarkMode = () => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    return localStorage.getItem(STORAGE_KEYS.THEME) === 'dark';\r\n  } catch (error) {\r\n    return handleError('getDarkMode', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 设置主题模式（暗色/亮色）\r\n * @param {boolean} isDark 是否为暗色模式\r\n * @returns {boolean} 设置是否成功\r\n */\r\nexport const setDarkMode = (isDark) => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    localStorage.setItem(STORAGE_KEYS.THEME, isDark ? 'dark' : 'light');\r\n    document.documentElement.classList.toggle('dark', isDark);\r\n    return true;\r\n  } catch (error) {\r\n    return handleError('setDarkMode', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取API使用统计\r\n * @returns {Object} API使用统计对象\r\n */\r\nexport const getApiUsage = () => {\r\n  if (!isBrowser()) return { count: 0, lastReset: new Date().toISOString() };\r\n  \r\n  try {\r\n    const data = localStorage.getItem(STORAGE_KEYS.API_USAGE);\r\n    if (!data) {\r\n      const defaultData = { count: 0, lastReset: new Date().toISOString() };\r\n      localStorage.setItem(STORAGE_KEYS.API_USAGE, JSON.stringify(defaultData));\r\n      return defaultData;\r\n    }\r\n    return JSON.parse(data);\r\n  } catch (error) {\r\n    return handleError('getApiUsage', error, { count: 0, lastReset: new Date().toISOString() });\r\n  }\r\n};\r\n\r\n/**\r\n * 增加API使用次数\r\n * @returns {Object} 更新后的API使用统计\r\n */\r\nexport const incrementApiUsage = () => {\r\n  if (!isBrowser()) return { count: 0, lastReset: new Date().toISOString() };\r\n  \r\n  try {\r\n    const usage = getApiUsage();\r\n    usage.count += 1;\r\n    localStorage.setItem(STORAGE_KEYS.API_USAGE, JSON.stringify(usage));\r\n    return usage;\r\n  } catch (error) {\r\n    return handleError('incrementApiUsage', error, { count: 0, lastReset: new Date().toISOString() });\r\n  }\r\n};\r\n\r\n/**\r\n * 重置API使用统计\r\n * @returns {Object} 重置后的API使用统计\r\n */\r\nexport const resetApiUsage = () => {\r\n  if (!isBrowser()) return { count: 0, lastReset: new Date().toISOString() };\r\n  \r\n  try {\r\n    const resetData = { count: 0, lastReset: new Date().toISOString() };\r\n    localStorage.setItem(STORAGE_KEYS.API_USAGE, JSON.stringify(resetData));\r\n    return resetData;\r\n  } catch (error) {\r\n    return handleError('resetApiUsage', error, { count: 0, lastReset: new Date().toISOString() });\r\n  }\r\n};\r\n\r\n/**\r\n * 获取最近使用的文件列表\r\n * @returns {Array} 文件列表\r\n */\r\nexport const getRecentFiles = () => {\r\n  if (!isBrowser()) return [];\r\n  \r\n  try {\r\n    const data = localStorage.getItem(STORAGE_KEYS.RECENT_FILES);\r\n    return data ? JSON.parse(data) : [];\r\n  } catch (error) {\r\n    return handleError('getRecentFiles', error, []);\r\n  }\r\n};\r\n\r\n/**\r\n * 添加最近使用的文件\r\n * @param {Object} file 文件对象，包含name, size, type等信息\r\n * @returns {Array} 更新后的文件列表\r\n */\r\nexport const addRecentFile = (file) => {\r\n  if (!isBrowser()) return [];\r\n  if (!file || !file.name) return getRecentFiles();\r\n  \r\n  try {\r\n    const files = getRecentFiles();\r\n    \r\n    // 创建新的文件记录\r\n    const newFile = {\r\n      name: file.name,\r\n      size: file.size || 0,\r\n      type: file.type || 'unknown',\r\n      lastUsed: new Date().toISOString()\r\n    };\r\n    \r\n    // 检查是否已经存在同名文件，如果存在则更新\r\n    const existingIndex = files.findIndex(f => f.name === file.name);\r\n    if (existingIndex >= 0) {\r\n      files[existingIndex] = newFile;\r\n    } else {\r\n      files.unshift(newFile);\r\n    }\r\n    \r\n    // 只保留最近的10个文件\r\n    const limitedFiles = files.slice(0, 10);\r\n    \r\n    localStorage.setItem(STORAGE_KEYS.RECENT_FILES, JSON.stringify(limitedFiles));\r\n    return limitedFiles;\r\n  } catch (error) {\r\n    return handleError('addRecentFile', error, getRecentFiles());\r\n  }\r\n};\r\n\r\n/**\r\n * 保存历史记录\r\n * @param {Object} record 历史记录对象\r\n * @returns {boolean} 保存是否成功\r\n */\r\nexport const saveToHistoryRecord = (record) => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    // 确保必需字段存在\r\n    if (!record.title || !record.content) {\r\n      console.error('[LocalStorageManager] 保存历史记录失败：标题或内容缺失');\r\n      return false;\r\n    }\r\n    \r\n    // 创建唯一ID\r\n    const id = record.id || `hist-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    // 获取现有历史记录\r\n    const historyItems = getHistoryItems();\r\n    \r\n    // 准备新记录\r\n    const newItem = {\r\n      id,\r\n      title: record.title,\r\n      originalFileName: record.originalFileName || '未命名文件',\r\n      date: record.date || new Date().toISOString().slice(0, 10),\r\n      outputStyle: record.outputStyle || 'summary',\r\n      previewText: record.content.substring(0, 150) + '...',\r\n      content: record.content,\r\n      tags: record.tags || [],\r\n    };\r\n    \r\n    // 检查是否存在相同ID的记录，如果存在则更新，否则添加新记录\r\n    const existingIndex = historyItems.findIndex(hist => hist.id === id);\r\n    if (existingIndex >= 0) {\r\n      historyItems[existingIndex] = newItem;\r\n    } else {\r\n      historyItems.unshift(newItem); // 添加到最前面\r\n    }\r\n    \r\n    // 获取用户设置的最大历史记录数量，默认为50\r\n    const settings = getUserSettings();\r\n    const maxHistoryItems = settings.preferences?.maxHistoryItems || 50;\r\n    \r\n    // 限制存储数量\r\n    const limitedItems = historyItems.slice(0, maxHistoryItems);\r\n    \r\n    // 保存到本地存储\r\n    localStorage.setItem(STORAGE_KEYS.HISTORY, JSON.stringify(limitedItems));\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    return handleError('saveToHistoryRecord', error, false);\r\n  }\r\n};\r\n\r\n// 导出所有功能\r\nexport default {\r\n  saveToHistory,\r\n  getHistoryItems,\r\n  getHistoryItem,\r\n  deleteHistoryItem,\r\n  deleteHistoryItems,\r\n  clearAllHistory,\r\n  saveUserSettings,\r\n  getUserSettings,\r\n  getDefaultSettings,\r\n  getDarkMode,\r\n  setDarkMode,\r\n  getApiUsage,\r\n  incrementApiUsage,\r\n  resetApiUsage,\r\n  getRecentFiles,\r\n  addRecentFile,\r\n  saveToHistoryRecord\r\n}; "],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA,YAAY;AACZ,MAAM,eAAe;IACnB,SAAS;IACT,eAAe;IACf,OAAO;IACP,WAAW;IACX,cAAc;AAChB;AAEA;;;;;;CAMC,GACD,MAAM,cAAc,CAAC,cAAc,OAAO;IACxC,QAAQ,KAAK,CAAC,CAAC,sBAAsB,EAAE,aAAa,IAAI,CAAC,EAAE;IAC3D,OAAO;AACT;AAEA;;;CAGC,GACD,MAAM,YAAY,IAAM,gBAAkB;AAOnC,MAAM,gBAAgB,CAAC;IAC5B,IAAI,CAAC,aAAa,OAAO;;AAiD3B;AAMO,MAAM,kBAAkB;IAC7B,IAAI,CAAC,aAAa,OAAO,EAAE;;AAQ7B;AAOO,MAAM,iBAAiB,CAAC;IAC7B,IAAI,CAAC,aAAa,OAAO;;AAQ3B;AAOO,MAAM,oBAAoB,CAAC;IAChC,IAAI,CAAC,aAAa,OAAO;;AAgB3B;AAOO,MAAM,qBAAqB,CAAC;IACjC,IAAI,CAAC,aAAa,OAAO;;AAgB3B;AAMO,MAAM,kBAAkB;IAC7B,IAAI,CAAC,aAAa,OAAO;;AAQ3B;AAOO,MAAM,mBAAmB,CAAC;IAC/B,IAAI,CAAC,aAAa,OAAO;;AAe3B;AAMO,MAAM,kBAAkB;IAC7B,IAAI,CAAC,aAAa;QAChB,OAAO;IACT;;AAcF;AAMO,MAAM,qBAAqB;IAChC,OAAO;QACL,UAAU;YACR,MAAM;YACN,OAAO;QACT;QACA,aAAa;YACX,oBAAoB;YACpB,eAAe;YACf,cAAc;YACd,iBAAiB;YACjB,UAAU;YACV,iBAAiB;QACnB;QACA,aAAa;QACb,UAAU;QACV,UAAU,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;IAC9C;AACF;AAMO,MAAM,cAAc;IACzB,IAAI,CAAC,aAAa,OAAO;;AAO3B;AAOO,MAAM,cAAc,CAAC;IAC1B,IAAI,CAAC,aAAa,OAAO;;AAS3B;AAMO,MAAM,cAAc;IACzB,IAAI,CAAC,aAAa,OAAO;QAAE,OAAO;QAAG,WAAW,IAAI,OAAO,WAAW;IAAG;;AAa3E;AAMO,MAAM,oBAAoB;IAC/B,IAAI,CAAC,aAAa,OAAO;QAAE,OAAO;QAAG,WAAW,IAAI,OAAO,WAAW;IAAG;;AAU3E;AAMO,MAAM,gBAAgB;IAC3B,IAAI,CAAC,aAAa,OAAO;QAAE,OAAO;QAAG,WAAW,IAAI,OAAO,WAAW;IAAG;;AAS3E;AAMO,MAAM,iBAAiB;IAC5B,IAAI,CAAC,aAAa,OAAO,EAAE;;AAQ7B;AAOO,MAAM,gBAAgB,CAAC;IAC5B,IAAI,CAAC,aAAa,OAAO,EAAE;;AA8B7B;AAOO,MAAM,sBAAsB,CAAC;IAClC,IAAI,CAAC,aAAa,OAAO;;AAiD3B;uCAGe;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACF","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/genreshift-web/app/history/%5Bid%5D/page.js"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { use } from 'react';\r\nimport Link from 'next/link';\r\nimport { getHistoryItem, getDarkMode, setDarkMode } from '../../utils/localStorageManager';\r\n\r\nexport default function HistoryDetail({ params }) {\r\n  const [historyItem, setHistoryItem] = useState(null);\r\n  const [darkMode, setDarkModeState] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // 使用 React.use() 来访问 params\r\n  const resolvedParams = use(params);\r\n  const id = resolvedParams.id;\r\n\r\n  useEffect(() => {\r\n    // 设置主题\r\n    const savedMode = getDarkMode();\r\n    setDarkModeState(savedMode);\r\n    document.documentElement.classList.toggle('dark', savedMode);\r\n\r\n    // 加载历史记录详情\r\n    const item = getHistoryItem(id);\r\n    setHistoryItem(item);\r\n    setIsLoading(false);\r\n  }, [id]);\r\n\r\n  // 切换深色模式\r\n  const toggleDarkMode = () => {\r\n    const newMode = !darkMode;\r\n    setDarkModeState(newMode);\r\n    setDarkMode(newMode);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"w-12 h-12 border-4 border-indigo-200 dark:border-indigo-800 border-t-indigo-600 dark:border-t-indigo-400 rounded-full animate-spin\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!historyItem) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n        <div className=\"container mx-auto px-6 py-8\">\r\n          <div className=\"text-center py-16\">\r\n            <svg className=\"w-16 h-16 mx-auto text-gray-300 dark:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\r\n            </svg>\r\n            <h2 className=\"mt-4 text-xl font-medium text-gray-800 dark:text-gray-200\">未找到历史记录</h2>\r\n            <p className=\"mt-2 text-gray-500 dark:text-gray-400\">该历史记录可能已被删除或不存在</p>\r\n            <Link href=\"/history\" className=\"mt-4 inline-block px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition\">\r\n              返回历史记录\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n      {/* 导航栏 */}\r\n      <nav className=\"sticky top-0 z-30 bg-white/80 dark:bg-gray-900/80 backdrop-blur-md shadow-sm\">\r\n        <div className=\"container mx-auto px-6 py-4 flex justify-between items-center\">\r\n          <div className=\"flex items-center space-x-8\">\r\n            <Link href=\"/\" className=\"text-2xl font-bold bg-gradient-to-r from-indigo-500 to-blue-500 text-transparent bg-clip-text\">\r\n              GenreShift\r\n            </Link>\r\n            <div className=\"hidden md:flex space-x-6 text-gray-600 dark:text-gray-300\">\r\n              <Link href=\"/workspace\" className=\"hover:text-indigo-600 dark:hover:text-indigo-400 transition\">工作台</Link>\r\n              <Link href=\"/history\" className=\"text-indigo-600 dark:text-indigo-400 font-medium\">历史记录</Link>\r\n              <Link href=\"/help\" className=\"hover:text-indigo-600 dark:hover:text-indigo-400 transition\">帮助中心</Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center space-x-4\">\r\n            {/* 深色模式切换按钮 */}\r\n            <button \r\n              onClick={toggleDarkMode}\r\n              className=\"p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 transition\"\r\n            >\r\n              {darkMode ? (\r\n                <svg className=\"w-6 h-6 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707\"/>\r\n                </svg>\r\n              ) : (\r\n                <svg className=\"w-6 h-6 text-gray-600 dark:text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"/>\r\n                </svg>\r\n              )}\r\n            </button>\r\n            \r\n            <Link href=\"/profile\" className=\"flex items-center\">\r\n              <div className=\"w-9 h-9 rounded-full bg-gradient-to-r from-indigo-500 to-blue-500 flex items-center justify-center text-white font-medium\">\r\n                用户\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <main className=\"container mx-auto px-6 py-8\">\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-800 dark:text-gray-100 mb-2\">{historyItem.title}</h1>\r\n              <p className=\"text-gray-600 dark:text-gray-400\">原始文件名: {historyItem.originalFileName}</p>\r\n            </div>\r\n            <Link href=\"/history\" className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition\">\r\n              返回历史记录\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 内容区域 */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden\">\r\n          <div className=\"p-6\">\r\n            <div className=\"prose dark:prose-invert max-w-none\">\r\n              <div dangerouslySetInnerHTML={{ __html: historyItem.content }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}