{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/genreshift-web/app/utils/localStorageManager.js"],"sourcesContent":["'use client';\r\n\r\n// 本地存储键名称常量\r\nconst STORAGE_KEYS = {\r\n  HISTORY: 'genreshift-history',\r\n  USER_SETTINGS: 'genreshift-settings',\r\n  THEME: 'theme',\r\n  API_USAGE: 'genreshift-api-usage',\r\n  RECENT_FILES: 'genreshift-recent-files'\r\n};\r\n\r\n/**\r\n * 统一的错误处理函数\r\n * @param {string} functionName 函数名称\r\n * @param {Error} error 错误对象\r\n * @param {*} defaultValue 默认返回值\r\n * @returns {*} 默认返回值\r\n */\r\nconst handleError = (functionName, error, defaultValue) => {\r\n  console.error(`[LocalStorageManager] ${functionName} 失败:`, error);\r\n  return defaultValue;\r\n};\r\n\r\n/**\r\n * 判断当前环境是否为浏览器\r\n * @returns {boolean} 是否为浏览器环境\r\n */\r\nconst isBrowser = () => typeof window !== 'undefined';\r\n\r\n/**\r\n * 添加或更新历史记录\r\n * @param {Object} item 历史记录项目\r\n * @returns {string|null} 记录ID或null（失败时）\r\n */\r\nexport const saveToHistory = (item) => {\r\n  if (!isBrowser()) return null;\r\n  \r\n  try {\r\n    // 确保必需字段存在\r\n    if (!item.title || !item.content) {\r\n      console.error('[LocalStorageManager] 保存历史记录失败：标题或内容缺失');\r\n      return null;\r\n    }\r\n    \r\n    // 创建唯一ID\r\n    const id = item.id || `hist-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    // 获取现有历史记录\r\n    const historyItems = getHistoryItems();\r\n    \r\n    // 准备新记录\r\n    const newItem = {\r\n      id,\r\n      title: item.title,\r\n      originalFileName: item.originalFileName || '未命名文件',\r\n      date: item.date || new Date().toISOString().slice(0, 10),\r\n      outputStyle: item.outputStyle || 'summary',\r\n      previewText: item.content.substring(0, 150) + '...',\r\n      content: item.content,\r\n      tags: item.tags || [],\r\n    };\r\n    \r\n    // 检查是否存在相同ID的记录，如果存在则更新，否则添加新记录\r\n    const existingIndex = historyItems.findIndex(hist => hist.id === id);\r\n    if (existingIndex >= 0) {\r\n      historyItems[existingIndex] = newItem;\r\n    } else {\r\n      historyItems.unshift(newItem); // 添加到最前面\r\n    }\r\n    \r\n    // 获取用户设置的最大历史记录数量，默认为50\r\n    const settings = getUserSettings();\r\n    const maxHistoryItems = settings.preferences?.maxHistoryItems || 50;\r\n    \r\n    // 限制存储数量\r\n    const limitedItems = historyItems.slice(0, maxHistoryItems);\r\n    \r\n    // 保存到本地存储\r\n    localStorage.setItem(STORAGE_KEYS.HISTORY, JSON.stringify(limitedItems));\r\n    \r\n    return id;\r\n  } catch (error) {\r\n    return handleError('saveToHistory', error, null);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取所有历史记录\r\n * @returns {Array} 历史记录数组\r\n */\r\nexport const getHistoryItems = () => {\r\n  if (!isBrowser()) return [];\r\n  \r\n  try {\r\n    const historyData = localStorage.getItem(STORAGE_KEYS.HISTORY);\r\n    return historyData ? JSON.parse(historyData) : [];\r\n  } catch (error) {\r\n    return handleError('getHistoryItems', error, []);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取单个历史记录\r\n * @param {string} id 记录ID\r\n * @returns {Object|null} 历史记录对象或null\r\n */\r\nexport const getHistoryItem = (id) => {\r\n  if (!isBrowser()) return null;\r\n  \r\n  try {\r\n    const historyItems = getHistoryItems();\r\n    return historyItems.find(item => item.id === id) || null;\r\n  } catch (error) {\r\n    return handleError('getHistoryItem', error, null);\r\n  }\r\n};\r\n\r\n/**\r\n * 删除单个历史记录\r\n * @param {string} id 记录ID\r\n * @returns {boolean} 删除是否成功\r\n */\r\nexport const deleteHistoryItem = (id) => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    let historyItems = getHistoryItems();\r\n    const initialLength = historyItems.length;\r\n    \r\n    historyItems = historyItems.filter(item => item.id !== id);\r\n    \r\n    if (historyItems.length !== initialLength) {\r\n      localStorage.setItem(STORAGE_KEYS.HISTORY, JSON.stringify(historyItems));\r\n      return true;\r\n    }\r\n    return false;\r\n  } catch (error) {\r\n    return handleError('deleteHistoryItem', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 删除多个历史记录\r\n * @param {Array} ids 记录ID数组\r\n * @returns {number} 成功删除的数量\r\n */\r\nexport const deleteHistoryItems = (ids) => {\r\n  if (!isBrowser()) return 0;\r\n  if (!ids || !ids.length) return 0;\r\n  \r\n  try {\r\n    let historyItems = getHistoryItems();\r\n    const initialLength = historyItems.length;\r\n    \r\n    historyItems = historyItems.filter(item => !ids.includes(item.id));\r\n    \r\n    const deletedCount = initialLength - historyItems.length;\r\n    localStorage.setItem(STORAGE_KEYS.HISTORY, JSON.stringify(historyItems));\r\n    \r\n    return deletedCount;\r\n  } catch (error) {\r\n    return handleError('deleteHistoryItems', error, 0);\r\n  }\r\n};\r\n\r\n/**\r\n * 清空所有历史记录\r\n * @returns {boolean} 清空是否成功\r\n */\r\nexport const clearAllHistory = () => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    localStorage.removeItem(STORAGE_KEYS.HISTORY);\r\n    return true;\r\n  } catch (error) {\r\n    return handleError('clearAllHistory', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 保存用户设置\r\n * @param {Object} settings 设置对象\r\n * @returns {boolean} 保存是否成功\r\n */\r\nexport const saveUserSettings = (settings) => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    // 获取现有设置\r\n    const currentSettings = getUserSettings();\r\n    \r\n    // 合并新设置\r\n    const updatedSettings = { ...currentSettings, ...settings };\r\n    \r\n    // 保存到本地存储\r\n    localStorage.setItem(STORAGE_KEYS.USER_SETTINGS, JSON.stringify(updatedSettings));\r\n    return true;\r\n  } catch (error) {\r\n    return handleError('saveUserSettings', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取用户设置\r\n * @returns {Object} 用户设置对象\r\n */\r\nexport const getUserSettings = () => {\r\n  if (!isBrowser()) {\r\n    return getDefaultSettings();\r\n  }\r\n  \r\n  try {\r\n    const settingsData = localStorage.getItem(STORAGE_KEYS.USER_SETTINGS);\r\n    \r\n    // 如果找不到设置或解析失败，返回默认设置\r\n    if (!settingsData) {\r\n      return getDefaultSettings();\r\n    }\r\n    \r\n    return { ...getDefaultSettings(), ...JSON.parse(settingsData) };\r\n  } catch (error) {\r\n    return handleError('getUserSettings', error, getDefaultSettings());\r\n  }\r\n};\r\n\r\n/**\r\n * 获取默认设置\r\n * @returns {Object} 默认设置对象\r\n */\r\nexport const getDefaultSettings = () => {\r\n  return {\r\n    userInfo: {\r\n      name: '用户',\r\n      email: '',\r\n    },\r\n    preferences: {\r\n      defaultOutputStyle: 'news',\r\n      defaultLength: 'medium',\r\n      defaultFocus: 'general',\r\n      defaultLanguage: 'zh',\r\n      apiModel: 'qwen-turbo',\r\n      maxHistoryItems: 50,\r\n    },\r\n    saveHistory: true,\r\n    darkMode: false,\r\n    joinDate: new Date().toISOString().slice(0, 10),\r\n  };\r\n};\r\n\r\n/**\r\n * 获取主题模式（暗色/亮色）\r\n * @returns {boolean} 是否为暗色模式\r\n */\r\nexport const getDarkMode = () => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    return localStorage.getItem(STORAGE_KEYS.THEME) === 'dark';\r\n  } catch (error) {\r\n    return handleError('getDarkMode', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 设置主题模式（暗色/亮色）\r\n * @param {boolean} isDark 是否为暗色模式\r\n * @returns {boolean} 设置是否成功\r\n */\r\nexport const setDarkMode = (isDark) => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    localStorage.setItem(STORAGE_KEYS.THEME, isDark ? 'dark' : 'light');\r\n    document.documentElement.classList.toggle('dark', isDark);\r\n    return true;\r\n  } catch (error) {\r\n    return handleError('setDarkMode', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取API使用统计\r\n * @returns {Object} API使用统计对象\r\n */\r\nexport const getApiUsage = () => {\r\n  if (!isBrowser()) return { count: 0, lastReset: new Date().toISOString() };\r\n  \r\n  try {\r\n    const data = localStorage.getItem(STORAGE_KEYS.API_USAGE);\r\n    if (!data) {\r\n      const defaultData = { count: 0, lastReset: new Date().toISOString() };\r\n      localStorage.setItem(STORAGE_KEYS.API_USAGE, JSON.stringify(defaultData));\r\n      return defaultData;\r\n    }\r\n    return JSON.parse(data);\r\n  } catch (error) {\r\n    return handleError('getApiUsage', error, { count: 0, lastReset: new Date().toISOString() });\r\n  }\r\n};\r\n\r\n/**\r\n * 增加API使用次数\r\n * @returns {Object} 更新后的API使用统计\r\n */\r\nexport const incrementApiUsage = () => {\r\n  if (!isBrowser()) return { count: 0, lastReset: new Date().toISOString() };\r\n  \r\n  try {\r\n    const usage = getApiUsage();\r\n    usage.count += 1;\r\n    localStorage.setItem(STORAGE_KEYS.API_USAGE, JSON.stringify(usage));\r\n    return usage;\r\n  } catch (error) {\r\n    return handleError('incrementApiUsage', error, { count: 0, lastReset: new Date().toISOString() });\r\n  }\r\n};\r\n\r\n/**\r\n * 重置API使用统计\r\n * @returns {Object} 重置后的API使用统计\r\n */\r\nexport const resetApiUsage = () => {\r\n  if (!isBrowser()) return { count: 0, lastReset: new Date().toISOString() };\r\n  \r\n  try {\r\n    const resetData = { count: 0, lastReset: new Date().toISOString() };\r\n    localStorage.setItem(STORAGE_KEYS.API_USAGE, JSON.stringify(resetData));\r\n    return resetData;\r\n  } catch (error) {\r\n    return handleError('resetApiUsage', error, { count: 0, lastReset: new Date().toISOString() });\r\n  }\r\n};\r\n\r\n/**\r\n * 获取最近使用的文件列表\r\n * @returns {Array} 文件列表\r\n */\r\nexport const getRecentFiles = () => {\r\n  if (!isBrowser()) return [];\r\n  \r\n  try {\r\n    const data = localStorage.getItem(STORAGE_KEYS.RECENT_FILES);\r\n    return data ? JSON.parse(data) : [];\r\n  } catch (error) {\r\n    return handleError('getRecentFiles', error, []);\r\n  }\r\n};\r\n\r\n/**\r\n * 添加最近使用的文件\r\n * @param {Object} file 文件对象，包含name, size, type等信息\r\n * @returns {Array} 更新后的文件列表\r\n */\r\nexport const addRecentFile = (file) => {\r\n  if (!isBrowser()) return [];\r\n  if (!file || !file.name) return getRecentFiles();\r\n  \r\n  try {\r\n    const files = getRecentFiles();\r\n    \r\n    // 创建新的文件记录\r\n    const newFile = {\r\n      name: file.name,\r\n      size: file.size || 0,\r\n      type: file.type || 'unknown',\r\n      lastUsed: new Date().toISOString()\r\n    };\r\n    \r\n    // 检查是否已经存在同名文件，如果存在则更新\r\n    const existingIndex = files.findIndex(f => f.name === file.name);\r\n    if (existingIndex >= 0) {\r\n      files[existingIndex] = newFile;\r\n    } else {\r\n      files.unshift(newFile);\r\n    }\r\n    \r\n    // 只保留最近的10个文件\r\n    const limitedFiles = files.slice(0, 10);\r\n    \r\n    localStorage.setItem(STORAGE_KEYS.RECENT_FILES, JSON.stringify(limitedFiles));\r\n    return limitedFiles;\r\n  } catch (error) {\r\n    return handleError('addRecentFile', error, getRecentFiles());\r\n  }\r\n};\r\n\r\n/**\r\n * 保存历史记录\r\n * @param {Object} record 历史记录对象\r\n * @returns {boolean} 保存是否成功\r\n */\r\nexport const saveToHistoryRecord = (record) => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    // 确保必需字段存在\r\n    if (!record.title || !record.content) {\r\n      console.error('[LocalStorageManager] 保存历史记录失败：标题或内容缺失');\r\n      return false;\r\n    }\r\n    \r\n    // 创建唯一ID\r\n    const id = record.id || `hist-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    // 获取现有历史记录\r\n    const historyItems = getHistoryItems();\r\n    \r\n    // 准备新记录\r\n    const newItem = {\r\n      id,\r\n      title: record.title,\r\n      originalFileName: record.originalFileName || '未命名文件',\r\n      date: record.date || new Date().toISOString().slice(0, 10),\r\n      outputStyle: record.outputStyle || 'summary',\r\n      previewText: record.content.substring(0, 150) + '...',\r\n      content: record.content,\r\n      tags: record.tags || [],\r\n    };\r\n    \r\n    // 检查是否存在相同ID的记录，如果存在则更新，否则添加新记录\r\n    const existingIndex = historyItems.findIndex(hist => hist.id === id);\r\n    if (existingIndex >= 0) {\r\n      historyItems[existingIndex] = newItem;\r\n    } else {\r\n      historyItems.unshift(newItem); // 添加到最前面\r\n    }\r\n    \r\n    // 获取用户设置的最大历史记录数量，默认为50\r\n    const settings = getUserSettings();\r\n    const maxHistoryItems = settings.preferences?.maxHistoryItems || 50;\r\n    \r\n    // 限制存储数量\r\n    const limitedItems = historyItems.slice(0, maxHistoryItems);\r\n    \r\n    // 保存到本地存储\r\n    localStorage.setItem(STORAGE_KEYS.HISTORY, JSON.stringify(limitedItems));\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    return handleError('saveToHistoryRecord', error, false);\r\n  }\r\n};\r\n\r\n// 导出所有功能\r\nexport default {\r\n  saveToHistory,\r\n  getHistoryItems,\r\n  getHistoryItem,\r\n  deleteHistoryItem,\r\n  deleteHistoryItems,\r\n  clearAllHistory,\r\n  saveUserSettings,\r\n  getUserSettings,\r\n  getDefaultSettings,\r\n  getDarkMode,\r\n  setDarkMode,\r\n  getApiUsage,\r\n  incrementApiUsage,\r\n  resetApiUsage,\r\n  getRecentFiles,\r\n  addRecentFile,\r\n  saveToHistoryRecord\r\n}; "],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA,YAAY;AACZ,MAAM,eAAe;IACnB,SAAS;IACT,eAAe;IACf,OAAO;IACP,WAAW;IACX,cAAc;AAChB;AAEA;;;;;;CAMC,GACD,MAAM,cAAc,CAAC,cAAc,OAAO;IACxC,QAAQ,KAAK,CAAC,CAAC,sBAAsB,EAAE,aAAa,IAAI,CAAC,EAAE;IAC3D,OAAO;AACT;AAEA;;;CAGC,GACD,MAAM,YAAY,IAAM,gBAAkB;AAOnC,MAAM,gBAAgB,CAAC;IAC5B,IAAI,CAAC,aAAa,OAAO;;AAiD3B;AAMO,MAAM,kBAAkB;IAC7B,IAAI,CAAC,aAAa,OAAO,EAAE;;AAQ7B;AAOO,MAAM,iBAAiB,CAAC;IAC7B,IAAI,CAAC,aAAa,OAAO;;AAQ3B;AAOO,MAAM,oBAAoB,CAAC;IAChC,IAAI,CAAC,aAAa,OAAO;;AAgB3B;AAOO,MAAM,qBAAqB,CAAC;IACjC,IAAI,CAAC,aAAa,OAAO;;AAgB3B;AAMO,MAAM,kBAAkB;IAC7B,IAAI,CAAC,aAAa,OAAO;;AAQ3B;AAOO,MAAM,mBAAmB,CAAC;IAC/B,IAAI,CAAC,aAAa,OAAO;;AAe3B;AAMO,MAAM,kBAAkB;IAC7B,IAAI,CAAC,aAAa;QAChB,OAAO;IACT;;AAcF;AAMO,MAAM,qBAAqB;IAChC,OAAO;QACL,UAAU;YACR,MAAM;YACN,OAAO;QACT;QACA,aAAa;YACX,oBAAoB;YACpB,eAAe;YACf,cAAc;YACd,iBAAiB;YACjB,UAAU;YACV,iBAAiB;QACnB;QACA,aAAa;QACb,UAAU;QACV,UAAU,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,GAAG;IAC9C;AACF;AAMO,MAAM,cAAc;IACzB,IAAI,CAAC,aAAa,OAAO;;AAO3B;AAOO,MAAM,cAAc,CAAC;IAC1B,IAAI,CAAC,aAAa,OAAO;;AAS3B;AAMO,MAAM,cAAc;IACzB,IAAI,CAAC,aAAa,OAAO;QAAE,OAAO;QAAG,WAAW,IAAI,OAAO,WAAW;IAAG;;AAa3E;AAMO,MAAM,oBAAoB;IAC/B,IAAI,CAAC,aAAa,OAAO;QAAE,OAAO;QAAG,WAAW,IAAI,OAAO,WAAW;IAAG;;AAU3E;AAMO,MAAM,gBAAgB;IAC3B,IAAI,CAAC,aAAa,OAAO;QAAE,OAAO;QAAG,WAAW,IAAI,OAAO,WAAW;IAAG;;AAS3E;AAMO,MAAM,iBAAiB;IAC5B,IAAI,CAAC,aAAa,OAAO,EAAE;;AAQ7B;AAOO,MAAM,gBAAgB,CAAC;IAC5B,IAAI,CAAC,aAAa,OAAO,EAAE;;AA8B7B;AAOO,MAAM,sBAAsB,CAAC;IAClC,IAAI,CAAC,aAAa,OAAO;;AAiD3B;uCAGe;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACF","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/genreshift-web/app/history/page.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Link from 'next/link';\nimport { getHistoryItems, deleteHistoryItem, deleteHistoryItems, clearAllHistory, getDarkMode, setDarkMode } from '../utils/localStorageManager';\n\nexport default function History() {\n  // 状态管理\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filter, setFilter] = useState('all'); // all, news, blog, summary\n  const [sortBy, setSortBy] = useState('date-desc'); // date-desc, date-asc, title-asc, title-desc\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [darkMode, setDarkModeState] = useState(false);\n  \n  // 历史记录数据\n  const [historyItems, setHistoryItems] = useState([]);\n  \n  // 每页显示数量\n  const itemsPerPage = 5;\n  \n  // 初始化加载数据和主题\n  useEffect(() => {\n    // 设置主题\n    const savedMode = getDarkMode();\n    setDarkModeState(savedMode);\n    document.documentElement.classList.toggle('dark', savedMode);\n    \n    // 加载历史记录\n    loadHistoryData();\n  }, []);\n  \n  // 加载历史记录数据\n  const loadHistoryData = () => {\n    setIsLoading(true);\n    \n    // 短暂延迟以显示加载状态\n    setTimeout(() => {\n      const items = getHistoryItems();\n      setHistoryItems(items);\n      setIsLoading(false);\n    }, 300);\n  };\n  \n  // 切换深色模式\n  const toggleDarkMode = () => {\n    const newMode = !darkMode;\n    setDarkModeState(newMode);\n    setDarkMode(newMode);\n  };\n  \n  // 处理搜索和筛选\n  const filteredItems = historyItems.filter(item => {\n    const matchesSearch = \n      item.title.toLowerCase().includes(searchTerm.toLowerCase()) || \n      (item.tags && item.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase())));\n    \n    const matchesFilter = filter === 'all' || item.outputStyle === filter;\n    \n    return matchesSearch && matchesFilter;\n  });\n  \n  // 处理排序\n  const sortedItems = [...filteredItems].sort((a, b) => {\n    switch (sortBy) {\n      case 'date-desc':\n        return new Date(b.date) - new Date(a.date);\n      case 'date-asc':\n        return new Date(a.date) - new Date(b.date);\n      case 'title-asc':\n        return a.title.localeCompare(b.title);\n      case 'title-desc':\n        return b.title.localeCompare(a.title);\n      default:\n        return 0;\n    }\n  });\n  \n  // 分页\n  const totalPages = Math.ceil(sortedItems.length / itemsPerPage);\n  const currentItems = sortedItems.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n  \n  // 切换选择项\n  const toggleItemSelection = (id) => {\n    if (selectedItems.includes(id)) {\n      setSelectedItems(selectedItems.filter(itemId => itemId !== id));\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  };\n  \n  // 全选/取消全选\n  const toggleSelectAll = () => {\n    if (selectedItems.length === currentItems.length) {\n      setSelectedItems([]);\n    } else {\n      setSelectedItems(currentItems.map(item => item.id));\n    }\n  };\n  \n  // 确认删除\n  const confirmDelete = (id = null) => {\n    if (id) {\n      setItemToDelete(id);\n    }\n    setShowDeleteConfirm(true);\n  };\n  \n  // 执行删除\n  const executeDelete = () => {\n    if (itemToDelete) {\n      // 删除单个项目\n      if (deleteHistoryItem(itemToDelete)) {\n        loadHistoryData(); // 重新加载数据\n        setSelectedItems(selectedItems.filter(id => id !== itemToDelete));\n      }\n    } else if (selectedItems.length > 0) {\n      // 批量删除\n      const deletedCount = deleteHistoryItems(selectedItems);\n      if (deletedCount > 0) {\n        loadHistoryData(); // 重新加载数据\n        setSelectedItems([]);\n      }\n    } else if (selectedItems.length === 0 && !itemToDelete) {\n      // 清空所有\n      if (clearAllHistory()) {\n        loadHistoryData(); // 重新加载数据\n      }\n    }\n    \n    setShowDeleteConfirm(false);\n    setItemToDelete(null);\n  };\n  \n  // 获取样式类名\n  const getOutputStyleClass = (style) => {\n    switch (style) {\n      case 'news':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300';\n      case 'blog':\n        return 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300';\n      case 'summary':\n        return 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300';\n    }\n  };\n  \n  // 获取样式显示名称\n  const getOutputStyleName = (style) => {\n    switch (style) {\n      case 'news':\n        return '新闻';\n      case 'blog':\n        return '博客';\n      case 'summary':\n        return '摘要';\n      default:\n        return '未知';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* 导航栏 */}\n      <nav className=\"sticky top-0 z-30 bg-white/80 dark:bg-gray-900/80 backdrop-blur-md shadow-sm\">\n        <div className=\"container mx-auto px-6 py-4 flex justify-between items-center\">\n          <div className=\"flex items-center space-x-8\">\n            <Link href=\"/\" className=\"text-2xl font-bold bg-gradient-to-r from-indigo-500 to-blue-500 text-transparent bg-clip-text\">\n              GenreShift\n            </Link>\n            <div className=\"hidden md:flex space-x-6 text-gray-600 dark:text-gray-300\">\n              <Link href=\"/workspace\" className=\"hover:text-indigo-600 dark:hover:text-indigo-400 transition\">工作台</Link>\n              <Link href=\"/history\" className=\"text-indigo-600 dark:text-indigo-400 font-medium\">历史记录</Link>\n              <Link href=\"/help\" className=\"hover:text-indigo-600 dark:hover:text-indigo-400 transition\">帮助中心</Link>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            {/* 深色模式切换按钮 */}\n            <button \n              onClick={toggleDarkMode}\n              className=\"p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 transition\"\n            >\n              {darkMode ? (\n                <svg className=\"w-6 h-6 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707\"/>\n                </svg>\n              ) : (\n                <svg className=\"w-6 h-6 text-gray-600 dark:text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"/>\n                </svg>\n              )}\n            </button>\n            \n            <Link href=\"/profile\" className=\"flex items-center\">\n              <div className=\"w-9 h-9 rounded-full bg-gradient-to-r from-indigo-500 to-blue-500 flex items-center justify-center text-white font-medium\">\n                用户\n              </div>\n            </Link>\n          </div>\n        </div>\n      </nav>\n      \n      <main className=\"container mx-auto px-6 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-800 dark:text-gray-100 mb-4\">历史记录</h1>\n          <p className=\"text-gray-600 dark:text-gray-400\">查看、管理您转换过的所有论文</p>\n        </div>\n        \n        {/* 功能区 */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 mb-8\">\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between space-y-4 md:space-y-0\">\n            {/* 搜索框 */}\n            <div className=\"relative\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <svg className=\"w-5 h-5 text-gray-400 dark:text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n              </div>\n              <input\n                type=\"text\"\n                placeholder=\"搜索标题或标签...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 block w-full md:w-64 lg:w-80\"\n              />\n            </div>\n            \n            {/* 筛选器 */}\n            <div className=\"flex flex-wrap gap-2\">\n              <select \n                value={filter}\n                onChange={(e) => setFilter(e.target.value)}\n                className=\"px-3 py-2 bg-gray-50 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-200 text-sm\"\n              >\n                <option value=\"all\">全部类型</option>\n                <option value=\"news\">新闻</option>\n                <option value=\"blog\">博客</option>\n                <option value=\"summary\">摘要</option>\n              </select>\n              \n              <select \n                value={sortBy}\n                onChange={(e) => setSortBy(e.target.value)}\n                className=\"px-3 py-2 bg-gray-50 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-200 text-sm\"\n              >\n                <option value=\"date-desc\">最新优先</option>\n                <option value=\"date-asc\">最早优先</option>\n                <option value=\"title-asc\">标题 A-Z</option>\n                <option value=\"title-desc\">标题 Z-A</option>\n              </select>\n              \n              <button \n                onClick={() => confirmDelete()}\n                disabled={!selectedItems.length && historyItems.length === 0}\n                className={`px-3 py-2 rounded-lg text-sm font-medium flex items-center ${\n                  selectedItems.length > 0\n                    ? 'bg-red-100 dark:bg-red-900/30 text-red-700 dark:text-red-300 hover:bg-red-200 dark:hover:bg-red-800/40'\n                    : 'bg-gray-100 dark:bg-gray-700 text-gray-400 dark:text-gray-500 cursor-not-allowed'\n                }`}\n              >\n                <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                </svg>\n                {selectedItems.length > 0 ? `删除 (${selectedItems.length})` : '删除'}\n              </button>\n            </div>\n          </div>\n        </div>\n        \n        {/* 历史记录列表 */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden\">\n          {/* 列表头部 */}\n          <div className=\"border-b border-gray-200 dark:border-gray-700\">\n            <div className=\"grid grid-cols-12 gap-4 px-6 py-3\">\n              <div className=\"col-span-1 flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={currentItems.length > 0 && selectedItems.length === currentItems.length}\n                  onChange={toggleSelectAll}\n                  disabled={currentItems.length === 0}\n                  className=\"w-4 h-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500\"\n                />\n              </div>\n              <div className=\"col-span-5 md:col-span-4 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                标题\n              </div>\n              <div className=\"col-span-2 hidden md:block text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                类型\n              </div>\n              <div className=\"col-span-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                日期\n              </div>\n              <div className=\"col-span-3 md:col-span-2 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                操作\n              </div>\n            </div>\n          </div>\n          \n          {/* 加载状态 */}\n          {isLoading ? (\n            <div className=\"py-20 flex justify-center items-center\">\n              <div className=\"w-12 h-12 border-4 border-indigo-200 dark:border-indigo-800 border-t-indigo-600 dark:border-t-indigo-400 rounded-full animate-spin\"></div>\n            </div>\n          ) : (\n            <>\n              {/* 无数据状态 */}\n              {currentItems.length === 0 ? (\n                <div className=\"py-16 text-center\">\n                  <svg className=\"w-16 h-16 mx-auto text-gray-300 dark:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\" />\n                  </svg>\n                  <p className=\"mt-4 text-gray-500 dark:text-gray-400\">\n                    {searchTerm || filter !== 'all' ? '没有符合条件的记录' : '暂无历史记录'}\n                  </p>\n                  <Link href=\"/workspace\" className=\"mt-4 inline-block px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition\">\n                    前往工作台\n                  </Link>\n                </div>\n              ) : (\n                <>\n                  {/* 列表项 */}\n                  {currentItems.map((item) => (\n                    <div key={item.id} className=\"border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700/50 transition\">\n                      <div className=\"grid grid-cols-12 gap-4 px-6 py-4 items-center\">\n                        <div className=\"col-span-1 flex items-center\">\n                          <input\n                            type=\"checkbox\"\n                            checked={selectedItems.includes(item.id)}\n                            onChange={() => toggleItemSelection(item.id)}\n                            className=\"w-4 h-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500\"\n                          />\n                        </div>\n                        <div className=\"col-span-5 md:col-span-4\">\n                          <h3 className=\"text-sm font-medium text-gray-800 dark:text-gray-200 truncate\">{item.title}</h3>\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">{item.originalFileName}</p>\n                        </div>\n                        <div className=\"col-span-2 hidden md:block\">\n                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getOutputStyleClass(item.outputStyle)}`}>\n                            {getOutputStyleName(item.outputStyle)}\n                          </span>\n                        </div>\n                        <div className=\"col-span-3\">\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400\">{item.date}</p>\n                        </div>\n                        <div className=\"col-span-3 md:col-span-2 flex justify-end items-center space-x-2\">\n                          <Link \n                            href={`/history/${item.id}`}\n                            className=\"p-1.5 text-gray-600 dark:text-gray-300 hover:text-indigo-600 dark:hover:text-indigo-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-full transition\"\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                            </svg>\n                          </Link>\n                          <button \n                            onClick={() => confirmDelete(item.id)}\n                            className=\"p-1.5 text-gray-600 dark:text-gray-300 hover:text-red-600 dark:hover:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-full transition\"\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                            </svg>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              )}\n            </>\n          )}\n          \n          {/* 分页控制 */}\n          {totalPages > 1 && (\n            <div className=\"px-6 py-4 flex justify-between items-center border-t border-gray-200 dark:border-gray-700\">\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                显示 {Math.min((currentPage - 1) * itemsPerPage + 1, sortedItems.length)} - {Math.min(currentPage * itemsPerPage, sortedItems.length)} 条，共 {sortedItems.length} 条\n              </p>\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                  disabled={currentPage === 1}\n                  className={`p-2 rounded-md ${\n                    currentPage === 1\n                      ? 'text-gray-400 dark:text-gray-600 cursor-not-allowed'\n                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                  }`}\n                >\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                  </svg>\n                </button>\n                <button\n                  onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                  disabled={currentPage === totalPages}\n                  className={`p-2 rounded-md ${\n                    currentPage === totalPages\n                      ? 'text-gray-400 dark:text-gray-600 cursor-not-allowed'\n                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                  }`}\n                >\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </main>\n      \n      {/* 删除确认对话框 */}\n      <AnimatePresence>\n        {showDeleteConfirm && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/50\"\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              className=\"bg-white dark:bg-gray-800 rounded-xl shadow-xl max-w-md w-full p-6\"\n            >\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-red-100 dark:bg-red-900/30 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <svg className=\"w-8 h-8 text-red-600 dark:text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-gray-100 mb-2\">确认删除</h3>\n                <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\n                  {itemToDelete\n                    ? '确定要删除这条历史记录吗？此操作无法撤销。'\n                    : selectedItems.length > 0\n                      ? `确定要删除选中的 ${selectedItems.length} 条历史记录吗？此操作无法撤销。`\n                      : '确定要清空所有历史记录吗？此操作无法撤销。'\n                  }\n                </p>\n                <div className=\"flex justify-center space-x-4\">\n                  <button\n                    onClick={() => setShowDeleteConfirm(false)}\n                    className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition\"\n                  >\n                    取消\n                  </button>\n                  <button\n                    onClick={executeDelete}\n                    className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition\"\n                  >\n                    确认删除\n                  </button>\n                </div>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}