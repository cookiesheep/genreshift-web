{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/genreshift-web/app/utils/localStorageManager.js"],"sourcesContent":["'use client';\r\n\r\n// 本地存储键名称常量\r\nconst STORAGE_KEYS = {\r\n  HISTORY: 'genreshift-history',\r\n  USER_SETTINGS: 'genreshift-settings',\r\n  THEME: 'theme',\r\n  API_USAGE: 'genreshift-api-usage',\r\n  RECENT_FILES: 'genreshift-recent-files'\r\n};\r\n\r\n/**\r\n * 统一的错误处理函数\r\n * @param {string} functionName 函数名称\r\n * @param {Error} error 错误对象\r\n * @param {*} defaultValue 默认返回值\r\n * @returns {*} 默认返回值\r\n */\r\nconst handleError = (functionName, error, defaultValue) => {\r\n  console.error(`[LocalStorageManager] ${functionName} 失败:`, error);\r\n  return defaultValue;\r\n};\r\n\r\n/**\r\n * 判断当前环境是否为浏览器\r\n * @returns {boolean} 是否为浏览器环境\r\n */\r\nconst isBrowser = () => typeof window !== 'undefined';\r\n\r\n/**\r\n * 添加或更新历史记录\r\n * @param {Object} item 历史记录项目\r\n * @returns {string|null} 记录ID或null（失败时）\r\n */\r\nexport const saveToHistory = (item) => {\r\n  if (!isBrowser()) return null;\r\n  \r\n  try {\r\n    // 确保必需字段存在\r\n    if (!item.title || !item.content) {\r\n      console.error('[LocalStorageManager] 保存历史记录失败：标题或内容缺失');\r\n      return null;\r\n    }\r\n    \r\n    // 创建唯一ID\r\n    const id = item.id || `hist-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    // 获取现有历史记录\r\n    const historyItems = getHistoryItems();\r\n    \r\n    // 准备新记录\r\n    const newItem = {\r\n      id,\r\n      title: item.title,\r\n      originalFileName: item.originalFileName || '未命名文件',\r\n      date: item.date || new Date().toISOString().slice(0, 10),\r\n      outputStyle: item.outputStyle || 'summary',\r\n      previewText: item.content.substring(0, 150) + '...',\r\n      content: item.content,\r\n      tags: item.tags || [],\r\n    };\r\n    \r\n    // 检查是否存在相同ID的记录，如果存在则更新，否则添加新记录\r\n    const existingIndex = historyItems.findIndex(hist => hist.id === id);\r\n    if (existingIndex >= 0) {\r\n      historyItems[existingIndex] = newItem;\r\n    } else {\r\n      historyItems.unshift(newItem); // 添加到最前面\r\n    }\r\n    \r\n    // 获取用户设置的最大历史记录数量，默认为50\r\n    const settings = getUserSettings();\r\n    const maxHistoryItems = settings.preferences?.maxHistoryItems || 50;\r\n    \r\n    // 限制存储数量\r\n    const limitedItems = historyItems.slice(0, maxHistoryItems);\r\n    \r\n    // 保存到本地存储\r\n    localStorage.setItem(STORAGE_KEYS.HISTORY, JSON.stringify(limitedItems));\r\n    \r\n    return id;\r\n  } catch (error) {\r\n    return handleError('saveToHistory', error, null);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取所有历史记录\r\n * @returns {Array} 历史记录数组\r\n */\r\nexport const getHistoryItems = () => {\r\n  if (!isBrowser()) return [];\r\n  \r\n  try {\r\n    const historyData = localStorage.getItem(STORAGE_KEYS.HISTORY);\r\n    return historyData ? JSON.parse(historyData) : [];\r\n  } catch (error) {\r\n    return handleError('getHistoryItems', error, []);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取单个历史记录\r\n * @param {string} id 记录ID\r\n * @returns {Object|null} 历史记录对象或null\r\n */\r\nexport const getHistoryItem = (id) => {\r\n  if (!isBrowser()) return null;\r\n  \r\n  try {\r\n    const historyItems = getHistoryItems();\r\n    return historyItems.find(item => item.id === id) || null;\r\n  } catch (error) {\r\n    return handleError('getHistoryItem', error, null);\r\n  }\r\n};\r\n\r\n/**\r\n * 删除单个历史记录\r\n * @param {string} id 记录ID\r\n * @returns {boolean} 删除是否成功\r\n */\r\nexport const deleteHistoryItem = (id) => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    let historyItems = getHistoryItems();\r\n    const initialLength = historyItems.length;\r\n    \r\n    historyItems = historyItems.filter(item => item.id !== id);\r\n    \r\n    if (historyItems.length !== initialLength) {\r\n      localStorage.setItem(STORAGE_KEYS.HISTORY, JSON.stringify(historyItems));\r\n      return true;\r\n    }\r\n    return false;\r\n  } catch (error) {\r\n    return handleError('deleteHistoryItem', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 删除多个历史记录\r\n * @param {Array} ids 记录ID数组\r\n * @returns {number} 成功删除的数量\r\n */\r\nexport const deleteHistoryItems = (ids) => {\r\n  if (!isBrowser()) return 0;\r\n  if (!ids || !ids.length) return 0;\r\n  \r\n  try {\r\n    let historyItems = getHistoryItems();\r\n    const initialLength = historyItems.length;\r\n    \r\n    historyItems = historyItems.filter(item => !ids.includes(item.id));\r\n    \r\n    const deletedCount = initialLength - historyItems.length;\r\n    localStorage.setItem(STORAGE_KEYS.HISTORY, JSON.stringify(historyItems));\r\n    \r\n    return deletedCount;\r\n  } catch (error) {\r\n    return handleError('deleteHistoryItems', error, 0);\r\n  }\r\n};\r\n\r\n/**\r\n * 清空所有历史记录\r\n * @returns {boolean} 清空是否成功\r\n */\r\nexport const clearAllHistory = () => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    localStorage.removeItem(STORAGE_KEYS.HISTORY);\r\n    return true;\r\n  } catch (error) {\r\n    return handleError('clearAllHistory', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 保存用户设置\r\n * @param {Object} settings 设置对象\r\n * @returns {boolean} 保存是否成功\r\n */\r\nexport const saveUserSettings = (settings) => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    // 获取现有设置\r\n    const currentSettings = getUserSettings();\r\n    \r\n    // 合并新设置\r\n    const updatedSettings = { ...currentSettings, ...settings };\r\n    \r\n    // 保存到本地存储\r\n    localStorage.setItem(STORAGE_KEYS.USER_SETTINGS, JSON.stringify(updatedSettings));\r\n    return true;\r\n  } catch (error) {\r\n    return handleError('saveUserSettings', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取用户设置\r\n * @returns {Object} 用户设置对象\r\n */\r\nexport const getUserSettings = () => {\r\n  if (!isBrowser()) {\r\n    return getDefaultSettings();\r\n  }\r\n  \r\n  try {\r\n    const settingsData = localStorage.getItem(STORAGE_KEYS.USER_SETTINGS);\r\n    \r\n    // 如果找不到设置或解析失败，返回默认设置\r\n    if (!settingsData) {\r\n      return getDefaultSettings();\r\n    }\r\n    \r\n    return { ...getDefaultSettings(), ...JSON.parse(settingsData) };\r\n  } catch (error) {\r\n    return handleError('getUserSettings', error, getDefaultSettings());\r\n  }\r\n};\r\n\r\n/**\r\n * 获取默认设置\r\n * @returns {Object} 默认设置对象\r\n */\r\nexport const getDefaultSettings = () => {\r\n  return {\r\n    userInfo: {\r\n      name: '用户',\r\n      email: '',\r\n    },\r\n    preferences: {\r\n      defaultOutputStyle: 'news',\r\n      defaultLength: 'medium',\r\n      defaultFocus: 'general',\r\n      defaultLanguage: 'zh',\r\n      apiModel: 'qwen-turbo',\r\n      maxHistoryItems: 50,\r\n    },\r\n    saveHistory: true,\r\n    darkMode: false,\r\n    joinDate: new Date().toISOString().slice(0, 10),\r\n  };\r\n};\r\n\r\n/**\r\n * 获取主题模式（暗色/亮色）\r\n * @returns {boolean} 是否为暗色模式\r\n */\r\nexport const getDarkMode = () => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    return localStorage.getItem(STORAGE_KEYS.THEME) === 'dark';\r\n  } catch (error) {\r\n    return handleError('getDarkMode', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 设置主题模式（暗色/亮色）\r\n * @param {boolean} isDark 是否为暗色模式\r\n * @returns {boolean} 设置是否成功\r\n */\r\nexport const setDarkMode = (isDark) => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    localStorage.setItem(STORAGE_KEYS.THEME, isDark ? 'dark' : 'light');\r\n    document.documentElement.classList.toggle('dark', isDark);\r\n    return true;\r\n  } catch (error) {\r\n    return handleError('setDarkMode', error, false);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取API使用统计\r\n * @returns {Object} API使用统计对象\r\n */\r\nexport const getApiUsage = () => {\r\n  if (!isBrowser()) return { count: 0, lastReset: new Date().toISOString() };\r\n  \r\n  try {\r\n    const data = localStorage.getItem(STORAGE_KEYS.API_USAGE);\r\n    if (!data) {\r\n      const defaultData = { count: 0, lastReset: new Date().toISOString() };\r\n      localStorage.setItem(STORAGE_KEYS.API_USAGE, JSON.stringify(defaultData));\r\n      return defaultData;\r\n    }\r\n    return JSON.parse(data);\r\n  } catch (error) {\r\n    return handleError('getApiUsage', error, { count: 0, lastReset: new Date().toISOString() });\r\n  }\r\n};\r\n\r\n/**\r\n * 增加API使用次数\r\n * @returns {Object} 更新后的API使用统计\r\n */\r\nexport const incrementApiUsage = () => {\r\n  if (!isBrowser()) return { count: 0, lastReset: new Date().toISOString() };\r\n  \r\n  try {\r\n    const usage = getApiUsage();\r\n    usage.count += 1;\r\n    localStorage.setItem(STORAGE_KEYS.API_USAGE, JSON.stringify(usage));\r\n    return usage;\r\n  } catch (error) {\r\n    return handleError('incrementApiUsage', error, { count: 0, lastReset: new Date().toISOString() });\r\n  }\r\n};\r\n\r\n/**\r\n * 重置API使用统计\r\n * @returns {Object} 重置后的API使用统计\r\n */\r\nexport const resetApiUsage = () => {\r\n  if (!isBrowser()) return { count: 0, lastReset: new Date().toISOString() };\r\n  \r\n  try {\r\n    const resetData = { count: 0, lastReset: new Date().toISOString() };\r\n    localStorage.setItem(STORAGE_KEYS.API_USAGE, JSON.stringify(resetData));\r\n    return resetData;\r\n  } catch (error) {\r\n    return handleError('resetApiUsage', error, { count: 0, lastReset: new Date().toISOString() });\r\n  }\r\n};\r\n\r\n/**\r\n * 获取最近使用的文件列表\r\n * @returns {Array} 文件列表\r\n */\r\nexport const getRecentFiles = () => {\r\n  if (!isBrowser()) return [];\r\n  \r\n  try {\r\n    const data = localStorage.getItem(STORAGE_KEYS.RECENT_FILES);\r\n    return data ? JSON.parse(data) : [];\r\n  } catch (error) {\r\n    return handleError('getRecentFiles', error, []);\r\n  }\r\n};\r\n\r\n/**\r\n * 添加最近使用的文件\r\n * @param {Object} file 文件对象，包含name, size, type等信息\r\n * @returns {Array} 更新后的文件列表\r\n */\r\nexport const addRecentFile = (file) => {\r\n  if (!isBrowser()) return [];\r\n  if (!file || !file.name) return getRecentFiles();\r\n  \r\n  try {\r\n    const files = getRecentFiles();\r\n    \r\n    // 创建新的文件记录\r\n    const newFile = {\r\n      name: file.name,\r\n      size: file.size || 0,\r\n      type: file.type || 'unknown',\r\n      lastUsed: new Date().toISOString()\r\n    };\r\n    \r\n    // 检查是否已经存在同名文件，如果存在则更新\r\n    const existingIndex = files.findIndex(f => f.name === file.name);\r\n    if (existingIndex >= 0) {\r\n      files[existingIndex] = newFile;\r\n    } else {\r\n      files.unshift(newFile);\r\n    }\r\n    \r\n    // 只保留最近的10个文件\r\n    const limitedFiles = files.slice(0, 10);\r\n    \r\n    localStorage.setItem(STORAGE_KEYS.RECENT_FILES, JSON.stringify(limitedFiles));\r\n    return limitedFiles;\r\n  } catch (error) {\r\n    return handleError('addRecentFile', error, getRecentFiles());\r\n  }\r\n};\r\n\r\n/**\r\n * 保存历史记录\r\n * @param {Object} record 历史记录对象\r\n * @returns {boolean} 保存是否成功\r\n */\r\nexport const saveToHistoryRecord = (record) => {\r\n  if (!isBrowser()) return false;\r\n  \r\n  try {\r\n    // 确保必需字段存在\r\n    if (!record.title || !record.content) {\r\n      console.error('[LocalStorageManager] 保存历史记录失败：标题或内容缺失');\r\n      return false;\r\n    }\r\n    \r\n    // 创建唯一ID\r\n    const id = record.id || `hist-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    // 获取现有历史记录\r\n    const historyItems = getHistoryItems();\r\n    \r\n    // 准备新记录\r\n    const newItem = {\r\n      id,\r\n      title: record.title,\r\n      originalFileName: record.originalFileName || '未命名文件',\r\n      date: record.date || new Date().toISOString().slice(0, 10),\r\n      outputStyle: record.outputStyle || 'summary',\r\n      previewText: record.content.substring(0, 150) + '...',\r\n      content: record.content,\r\n      tags: record.tags || [],\r\n    };\r\n    \r\n    // 检查是否存在相同ID的记录，如果存在则更新，否则添加新记录\r\n    const existingIndex = historyItems.findIndex(hist => hist.id === id);\r\n    if (existingIndex >= 0) {\r\n      historyItems[existingIndex] = newItem;\r\n    } else {\r\n      historyItems.unshift(newItem); // 添加到最前面\r\n    }\r\n    \r\n    // 获取用户设置的最大历史记录数量，默认为50\r\n    const settings = getUserSettings();\r\n    const maxHistoryItems = settings.preferences?.maxHistoryItems || 50;\r\n    \r\n    // 限制存储数量\r\n    const limitedItems = historyItems.slice(0, maxHistoryItems);\r\n    \r\n    // 保存到本地存储\r\n    localStorage.setItem(STORAGE_KEYS.HISTORY, JSON.stringify(limitedItems));\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    return handleError('saveToHistoryRecord', error, false);\r\n  }\r\n};\r\n\r\n// 导出所有功能\r\nexport default {\r\n  saveToHistory,\r\n  getHistoryItems,\r\n  getHistoryItem,\r\n  deleteHistoryItem,\r\n  deleteHistoryItems,\r\n  clearAllHistory,\r\n  saveUserSettings,\r\n  getUserSettings,\r\n  getDefaultSettings,\r\n  getDarkMode,\r\n  setDarkMode,\r\n  getApiUsage,\r\n  incrementApiUsage,\r\n  resetApiUsage,\r\n  getRecentFiles,\r\n  addRecentFile,\r\n  saveToHistoryRecord\r\n}; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/genreshift-web/app/help/page.js"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { motion } from 'framer-motion';\nimport { getDarkMode, setDarkMode } from '../utils/localStorageManager';\n\nexport default function Help() {\n  const [activeTab, setActiveTab] = useState('guide');\n  const [darkMode, setDarkModeState] = useState(false);\n  \n  // 初始加载\n  useEffect(() => {\n    // 读取暗色模式状态\n    const savedMode = getDarkMode();\n    setDarkModeState(savedMode);\n    document.documentElement.classList.toggle('dark', savedMode);\n  }, []);\n  \n  // 切换深色模式\n  const toggleDarkMode = () => {\n    const newMode = !darkMode;\n    setDarkModeState(newMode);\n    setDarkMode(newMode);\n  };\n\n  // FAQ数据\n  const faqs = [\n    {\n      question: \"GenreShift可以处理多长的论文？\",\n      answer: \"GenreShift可以处理大多数标准长度的学术论文。不过，由于API处理限制，我们对内容长度有25,000字符的限制。超出此限制的内容将被截断，并显示警告提示。建议对特别长的论文分段处理或选择最有价值的部分进行转换。\"\n    },\n    {\n      question: \"支持哪些文件格式？\",\n      answer: \"目前支持PDF格式的学术论文和TXT文本文件。我们正在努力扩展支持更多的文件格式，如DOCX、LaTeX等。\"\n    },\n    {\n      question: \"转换的内容保存在哪里？\",\n      answer: \"所有转换结果都保存在您浏览器的本地存储中，可以在'历史记录'页面查看。请注意，清除浏览器缓存可能会导致历史记录丢失。未来我们将支持云端存储功能。\"\n    },\n    {\n      question: \"如何选择合适的输出样式？\",\n      answer: \"您可以根据需求选择不同的输出样式。'新闻'风格适合通俗易懂的表达；'博客'风格更加个性化和生动；'摘要'风格则提供简明扼要的重点内容概述。根据您的目标受众和用途选择合适的风格。\"\n    },\n    {\n      question: \"如何提高转换质量？\",\n      answer: \"要获得更好的转换效果，建议：1) 上传清晰可辨的PDF文件；2) 选择合适的内容关注点，如'研究方法'或'研究结果'；3) 如果原文较长，可以提取最相关的部分进行转换；4) 使用更强大的API模型（可在个人中心设置）。\"\n    },\n    {\n      question: \"转换失败怎么办？\",\n      answer: \"如果转换失败，您可以：1) 检查网络连接是否稳定；2) 尝试重新上传文件；3) 减少文件大小或内容长度；4) 确认文件格式正确且内容可读；5) 如多次尝试仍然失败，可能是我们的API服务暂时遇到问题，请稍后再试。\"\n    },\n    {\n      question: \"如何分享我的转换结果？\",\n      answer: \"目前您可以通过复制转换后的内容来分享。在转换结果页面，点击'复制到剪贴板'按钮，然后将内容粘贴到您希望的地方。我们计划在未来版本中添加直接分享链接的功能。\"\n    },\n    {\n      question: \"GenreShift的API使用限制是什么？\",\n      answer: \"免费用户每月可以进行100次转换操作。转换次数会在每月初重置。您可以在个人中心查看当前的使用情况。如需更多转换额度，敬请期待我们即将推出的专业版计划。\"\n    }\n  ];\n\n  // 用户指南内容\n  const userGuides = [\n    {\n      title: \"快速开始\",\n      content: (\n        <>\n          <p className=\"mb-3\">\n            GenreShift 是一个将学术论文转换为易于理解的格式的工具。它使用人工智能技术，帮助您更轻松地理解复杂的学术内容。\n          </p>\n          <p className=\"mb-3\">使用 GenreShift 只需几个简单步骤：</p>\n          <ol className=\"list-decimal pl-6 mb-6 space-y-2\">\n            <li>访问<Link href=\"/workspace\" className=\"text-indigo-600 dark:text-indigo-400 hover:underline\">工作台</Link>页面</li>\n            <li>上传PDF格式的学术论文或者输入文本内容</li>\n            <li>选择输出样式（新闻、博客或摘要）</li>\n            <li>选择关注点和语言</li>\n            <li>点击\"转换\"按钮</li>\n            <li>等待片刻，查看转换结果</li>\n          </ol>\n          <p>转换完成后，您可以复制、分享或保存结果。所有历史转换记录都会保存在<Link href=\"/history\" className=\"text-indigo-600 dark:text-indigo-400 hover:underline\">历史记录</Link>页面。</p>\n        </>\n      )\n    },\n    {\n      title: \"上传文件指南\",\n      content: (\n        <>\n          <p className=\"mb-3\">GenreShift 支持以下文件类型：</p>\n          <ul className=\"list-disc pl-6 mb-4 space-y-1\">\n            <li>PDF 文件（学术论文、研究报告等）</li>\n            <li>TXT 文本文件</li>\n          </ul>\n          <p className=\"mb-3\">上传文件时请注意：</p>\n          <ul className=\"list-disc pl-6 mb-4 space-y-2\">\n            <li>文件大小不应超过10MB</li>\n            <li>PDF文件应确保文本可选择（非扫描图像）</li>\n            <li>文本长度不应超过25,000字符，超出部分将被截断</li>\n            <li>含有过多公式、表格或图表的文件可能会影响转换质量</li>\n          </ul>\n          <p>您也可以直接复制粘贴文本内容到输入框，而不用上传文件。</p>\n        </>\n      )\n    },\n    {\n      title: \"输出样式说明\",\n      content: (\n        <>\n          <p className=\"mb-4\">GenreShift 提供三种不同的输出样式，以满足不同的阅读需求：</p>\n          \n          <h4 className=\"font-semibold mb-2 text-gray-800 dark:text-gray-200\">新闻风格</h4>\n          <p className=\"mb-4 pl-4 border-l-2 border-indigo-300 dark:border-indigo-700\">\n            以客观、简明的方式呈现论文内容，类似于新闻报道。重点突出研究的主要发现和重要信息，适合需要快速了解研究概况的读者。\n          </p>\n          \n          <h4 className=\"font-semibold mb-2 text-gray-800 dark:text-gray-200\">博客风格</h4>\n          <p className=\"mb-4 pl-4 border-l-2 border-indigo-300 dark:border-indigo-700\">\n            采用更加个性化、生动的表达方式，使内容更加易读和有趣。加入更多解释性内容和背景信息，适合希望深入但轻松理解研究内容的读者。\n          </p>\n          \n          <h4 className=\"font-semibold mb-2 text-gray-800 dark:text-gray-200\">摘要风格</h4>\n          <p className=\"mb-4 pl-4 border-l-2 border-indigo-300 dark:border-indigo-700\">\n            提供简洁扼要的研究概述，重点突出论文的主要观点、方法和结论。适合需要快速把握论文核心内容的读者。\n          </p>\n          \n          <p>您可以根据自己的需求和偏好选择合适的输出样式。也可以在个人中心设置默认的输出样式。</p>\n        </>\n      )\n    },\n    {\n      title: \"历史记录管理\",\n      content: (\n        <>\n          <p className=\"mb-4\">GenreShift 会自动保存您的转换历史记录，方便您随时查看和管理。</p>\n          \n          <h4 className=\"font-semibold mb-2 text-gray-800 dark:text-gray-200\">查看历史记录</h4>\n          <p className=\"mb-3\">\n            访问<Link href=\"/history\" className=\"text-indigo-600 dark:text-indigo-400 hover:underline\">历史记录</Link>页面可以查看所有之前转换过的内容。历史记录按时间倒序排列，最新的转换结果显示在最前面。\n          </p>\n          \n          <h4 className=\"font-semibold mb-2 text-gray-800 dark:text-gray-200\">管理历史记录</h4>\n          <p className=\"mb-3\">在历史记录页面，您可以：</p>\n          <ul className=\"list-disc pl-6 mb-4 space-y-2\">\n            <li>查看完整的转换结果</li>\n            <li>删除单条历史记录</li>\n            <li>清空所有历史记录</li>\n            <li>按文件名、日期或内容类型筛选记录</li>\n            <li>对历史记录进行排序</li>\n          </ul>\n          \n          <h4 className=\"font-semibold mb-2 text-gray-800 dark:text-gray-200\">历史记录存储</h4>\n          <p className=\"mb-3\">\n            所有历史记录都保存在浏览器的本地存储中。请注意以下几点：\n          </p>\n          <ul className=\"list-disc pl-6 mb-4 space-y-2\">\n            <li>清除浏览器缓存会导致历史记录丢失</li>\n            <li>历史记录只能在当前设备和浏览器中访问</li>\n            <li>您可以在个人中心设置历史记录的最大保存数量</li>\n          </ul>\n          \n          <p>在未来的版本中，我们计划添加云端同步功能，让您可以在不同设备间同步历史记录。</p>\n        </>\n      )\n    },\n    {\n      title: \"隐私与数据安全\",\n      content: (\n        <>\n          <p className=\"mb-4\">GenreShift 重视您的隐私和数据安全。以下是我们对您上传内容的处理方式：</p>\n          \n          <h4 className=\"font-semibold mb-2 text-gray-800 dark:text-gray-200\">上传内容处理</h4>\n          <ul className=\"list-disc pl-6 mb-4 space-y-2\">\n            <li>您上传的文件仅用于转换处理，不会被永久存储在我们的服务器上</li>\n            <li>文件内容在处理完成后会立即从服务器中删除</li>\n            <li>转换结果仅保存在您的本地浏览器中</li>\n          </ul>\n          \n          <h4 className=\"font-semibold mb-2 text-gray-800 dark:text-gray-200\">API 调用</h4>\n          <p className=\"mb-3\">\n            我们使用第三方 AI 服务进行内容转换。在此过程中：\n          </p>\n          <ul className=\"list-disc pl-6 mb-4 space-y-2\">\n            <li>您的内容会通过加密连接发送给 AI 服务提供商</li>\n            <li>内容不会被用于训练 AI 模型</li>\n            <li>所有通信均采用 HTTPS 加密协议</li>\n          </ul>\n          \n          <h4 className=\"font-semibold mb-2 text-gray-800 dark:text-gray-200\">本地存储</h4>\n          <p className=\"mb-3\">\n            GenreShift 使用浏览器的本地存储功能来保存：\n          </p>\n          <ul className=\"list-disc pl-6 mb-4 space-y-2\">\n            <li>转换历史记录</li>\n            <li>用户偏好设置</li>\n            <li>界面主题选择</li>\n          </ul>\n          \n          <p className=\"mb-3\">\n            您可以随时删除这些本地存储数据，或者通过清除浏览器缓存完全移除所有数据。\n          </p>\n          \n          <p>我们承诺保护您的数据安全，不会收集或共享您的个人信息或上传内容。</p>\n        </>\n      )\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* 导航栏 */}\n      <nav className=\"sticky top-0 z-30 bg-white/80 dark:bg-gray-900/80 backdrop-blur-md shadow-sm\">\n        <div className=\"container mx-auto px-6 py-4 flex justify-between items-center\">\n          <div className=\"flex items-center space-x-8\">\n            <Link href=\"/\" className=\"text-2xl font-bold bg-gradient-to-r from-indigo-500 to-blue-500 text-transparent bg-clip-text\">\n              GenreShift\n            </Link>\n            <div className=\"hidden md:flex space-x-6 text-gray-600 dark:text-gray-300\">\n              <Link href=\"/workspace\" className=\"hover:text-indigo-600 dark:hover:text-indigo-400 transition\">工作台</Link>\n              <Link href=\"/history\" className=\"hover:text-indigo-600 dark:hover:text-indigo-400 transition\">历史记录</Link>\n              <Link href=\"/help\" className=\"text-indigo-600 dark:text-indigo-400 transition\">帮助中心</Link>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            {/* 深色模式切换按钮 */}\n            <button \n              onClick={toggleDarkMode}\n              className=\"p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 transition\"\n            >\n              {darkMode ? (\n                <svg className=\"w-6 h-6 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707\"/>\n                </svg>\n              ) : (\n                <svg className=\"w-6 h-6 text-gray-600 dark:text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"/>\n                </svg>\n              )}\n            </button>\n            \n            <Link href=\"/profile\" className=\"flex items-center\">\n              <div className=\"w-9 h-9 rounded-full bg-gradient-to-r from-indigo-500 to-blue-500 flex items-center justify-center text-white font-medium\">\n                U\n              </div>\n            </Link>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"container mx-auto px-6 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-800 dark:text-gray-100 mb-4\">帮助中心</h1>\n          <p className=\"text-gray-600 dark:text-gray-400\">了解如何充分利用 GenreShift 的全部功能</p>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden\">\n          {/* 选项卡标题 */}\n          <div className=\"flex border-b border-gray-100 dark:border-gray-700\">\n            <button \n              className={`px-6 py-4 text-sm font-medium transition-colors duration-200 ${\n                activeTab === 'guide' \n                  ? 'text-indigo-600 dark:text-indigo-400 border-b-2 border-indigo-600 dark:border-indigo-400' \n                  : 'text-gray-600 dark:text-gray-400 hover:text-indigo-600 dark:hover:text-indigo-400'\n              }`}\n              onClick={() => setActiveTab('guide')}\n            >\n              用户指南\n            </button>\n            <button \n              className={`px-6 py-4 text-sm font-medium transition-colors duration-200 ${\n                activeTab === 'faq' \n                  ? 'text-indigo-600 dark:text-indigo-400 border-b-2 border-indigo-600 dark:border-indigo-400' \n                  : 'text-gray-600 dark:text-gray-400 hover:text-indigo-600 dark:hover:text-indigo-400'\n              }`}\n              onClick={() => setActiveTab('faq')}\n            >\n              常见问题\n            </button>\n          </div>\n\n          {/* 选项卡内容 */}\n          <div className=\"p-6\">\n            {activeTab === 'guide' ? (\n              <div className=\"space-y-10\">\n                {userGuides.map((guide, index) => (\n                  <motion.div \n                    key={index}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.4, delay: index * 0.1 }}\n                  >\n                    <h3 className=\"text-xl font-semibold text-gray-800 dark:text-gray-100 mb-4\">{guide.title}</h3>\n                    <div className=\"text-gray-700 dark:text-gray-300 leading-relaxed\">\n                      {guide.content}\n                    </div>\n                    {index < userGuides.length - 1 && (\n                      <div className=\"border-b border-gray-100 dark:border-gray-700 mt-10\"></div>\n                    )}\n                  </motion.div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"space-y-6\">\n                <p className=\"text-gray-700 dark:text-gray-300 mb-6\">以下是用户常见的问题和答案。如果您没有找到需要的信息，请联系我们的支持团队。</p>\n                \n                {faqs.map((faq, index) => (\n                  <motion.div \n                    key={index}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.3, delay: index * 0.1 }}\n                    className=\"bg-gray-50 dark:bg-gray-700/50 rounded-lg p-5\"\n                  >\n                    <h3 className=\"text-lg font-medium text-gray-800 dark:text-gray-100 mb-2\">{faq.question}</h3>\n                    <p className=\"text-gray-600 dark:text-gray-400\">{faq.answer}</p>\n                  </motion.div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* 联系我们 */}\n        <div className=\"mt-10 bg-gradient-to-r from-indigo-500 to-blue-500 rounded-xl shadow-md overflow-hidden\">\n          <div className=\"p-8 text-white\">\n            <h2 className=\"text-2xl font-semibold mb-4\">需要更多帮助？</h2>\n            <p className=\"mb-6 opacity-90\">如果您在使用 GenreShift 时遇到任何问题，或者有改进建议，请随时联系我们的支持团队。</p>\n            <button className=\"px-6 py-3 bg-white text-indigo-600 rounded-lg font-medium hover:bg-gray-100 transition\">\n              联系我们\n            </button>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}